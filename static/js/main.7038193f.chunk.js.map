{"version":3,"sources":["hooks/useWindowSize.js","components/Header.js","components/PlayerBox.js","components/PlayersContainer.js","reducers/players.js","customIcons.js","App.js","serviceWorker.js","index.js"],"names":["useWindowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","Header","dispatch","useDispatch","Box","as","bg","Icon","name","color","size","m","Heading","display","float","IconButton","icon","isRound","onClick","type","value","PlayerBox","player","rest","id","useDisclosure","isOpen","onOpen","onClose","rotateAngle","setRotateAngle","otherPlayers","useSelector","state","Object","keys","map","key","filter","_player","transform","Grid","templateColumns","w","fontSize","textAlign","Button","rounded","paddingRight","paddingLeft","marginTop","minWidth","marginBottom","life","Image","src","commander","image_uris","art_crop","alt","updateRotateAngle","Modal","cacheOptions","loadOptions","inputValue","request","axios","get","then","response","data","datum","label","onInputChange","newValue","replace","onChange","payload","Text","index","Flex","mt","mr","commanderDamage","commanderId","variantColor","PlayersContainer","players","Math","ceil","length","gap","slice","h","floor","defaultPlayerState","0","customIcons","pulse","path","fill","d","viewBox","twenty","forty","addPlayer","rotate","store","createStore","action","reduce","accumulator","updatedTheme","theme","icons","App","ThemeProvider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7038193f.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  const isClient = typeof window === \"object\";\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n","import React from \"react\";\nimport { Box, Heading, Icon, IconButton } from \"@chakra-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const { height, width } = useWindowSize();\n  return (\n    <Box as=\"header\" bg=\"grey\" height=\"45px\" width=\"full\">\n      <Icon name=\"pulse\" color=\"white\" size=\"1.25em\" m=\"3\"></Icon>\n      <Heading display=\"inline\" size=\"sm\" color=\"white\" m=\"1\">\n        Pulse Tracker {width}x{height}\n      </Heading>\n      <Box float=\"right\">\n        <IconButton\n          icon=\"addPlayer\"\n          isRound=\"true\"\n          onClick={() => dispatch({ type: \"ADD_PLAYER\" })}\n        />\n        <IconButton\n          icon=\"twenty\"\n          isRound=\"true\"\n          onClick={() => dispatch({ type: \"RESET_ALL_PLAYER_LIFE\", value: 20 })}\n        />\n        <IconButton\n          icon=\"forty\"\n          isRound=\"true\"\n          onClick={() => dispatch({ type: \"RESET_ALL_PLAYER_LIFE\", value: 40 })}\n        />\n      </Box>\n    </Box>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AsyncSelect from \"react-select/async\";\nimport {\n  Heading,\n  Box,\n  Flex,\n  Grid,\n  IconButton,\n  Image,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport useWindowSize from \"../hooks/useWindowSize\";\n\nexport const PlayerBox = ({ player, id, ...rest }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [rotateAngle, setRotateAngle] = useState(0);\n  const { height } = useWindowSize();\n\n  const loadOptions = (inputValue) => {\n    const request = axios.get(\n      `https://api.scryfall.com/cards/search?q=${inputValue}+type%3Alegendary`\n    );\n\n    if (request) {\n      return request.then((response) => {\n        const options = response.data.data.map((datum) => {\n          return { value: datum, label: datum.name };\n        });\n\n        return options;\n      });\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const otherPlayers = useSelector((state) =>\n    Object.keys(state)\n      .map((key) => state[key])\n      .filter((_player) => _player.name !== player.name)\n  );\n\n  const updateRotateAngle = () => {\n    switch (rotateAngle) {\n      case 0:\n        setRotateAngle(180);\n        return;\n      case 180:\n        setRotateAngle(0);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleInputChange = (newValue) => {\n    const inputValue = newValue.replace(/\\W/g, \"\");\n    return inputValue;\n  };\n\n  return (\n    <Box {...rest} transform={`rotate(${rotateAngle}deg)`}>\n      <Grid templateColumns=\"repeat(3, 1fr)\">\n        <Box w=\"100%\" fontSize=\"0.75em\" textAlign=\"center\">\n          <Button\n            onClick={() =>\n              dispatch({\n                type: \"SET_PLAYER_LIFE\",\n                id: player.id,\n                name: player.name,\n                value: -1,\n              })\n            }\n            rounded=\"2em\"\n            height=\"1.5em\"\n            paddingRight=\"0.15rem\"\n            paddingLeft=\"0.15rem\"\n            marginTop=\"1.25rem\"\n            minWidth=\"2rem\"\n          >\n            -1\n          </Button>\n        </Box>\n        <Box w=\"100%\">\n          <Heading textAlign=\"center\" size=\"1.6rem\" marginTop=\"0.5em\" marginBottom=\"0.5em\">\n            {player.life}\n          </Heading>\n        </Box>\n        <Box w=\"100%\" fontSize=\"0.75em\" textAlign=\"center\">\n          <Button\n            onClick={() =>\n              dispatch({\n                type: \"SET_PLAYER_LIFE\",\n                id: player.id,\n                name: player.name,\n                value: 1,\n              })\n            }\n            rounded=\"2em\"\n            height=\"1.5em\"\n            paddingRight=\"0.15rem\"\n            paddingLeft=\"0.15rem\"\n            marginTop=\"1.25rem\"\n            minWidth=\"2rem\"\n          >\n            +1\n          </Button>\n        </Box>\n      </Grid>\n      {\n        <Box textAlign=\"center\">\n          <Image\n            rounded=\"full\"\n            size={`${height * 0.10}px`}\n            src={\n              player.commander\n                ? player.commander.image_uris.art_crop\n                : `https://api.adorable.io/avatars/285/${player.name}.png`\n            }\n            alt={player.commander ? player.commander.name : player.name}\n          />\n        </Box>\n      }\n\n      <Heading size=\"md\" textAlign=\"center\" marginTop=\"0.5em\" marginBottom=\"0.5em\">\n        {player.commander ? player.commander.name : player.name}\n      </Heading>\n      <Grid templateColumns=\"repeat(3, 1fr)\" marginTop=\"1rem\">\n        <Box w=\"100%\" textAlign=\"center\">\n          <IconButton\n            icon=\"rotate\"\n            size=\"sm\"\n            isRound=\"true\"\n            onClick={() => updateRotateAngle()}\n          ></IconButton>\n          <IconButton\n            icon=\"edit\"\n            size=\"sm\"\n            isRound=\"true\"\n            onClick={onOpen}\n          ></IconButton>\n        </Box>\n      </Grid>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Edit: {player.name}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <AsyncSelect\n              cacheOptions\n              loadOptions={loadOptions}\n              onInputChange={handleInputChange}\n              onChange={(value) =>\n                dispatch({\n                  type: \"SET_PLAYER_COMMANDER\",\n                  payload: value.value,\n                  id: player.id,\n                })\n              }\n            />\n            <Text>Commander Damage</Text>\n            {otherPlayers.map((_player, index) => (\n              <Flex key={`${player.name}-${index}-${_player.name}`}>\n                <Text mt={\"1.25em\"} mr={\"1.5em\"}>\n                  {_player.name}\n                </Text>\n                <Text mt={\"1.25em\"} mr={\"1.5em\"}>\n                  {(player.commanderDamage &&\n                    player.commanderDamage[_player.id]) ||\n                    0}\n                </Text>\n                <Button\n                  onClick={() => {\n                    dispatch({\n                      type: \"SET_COMMANDER_DAMAGE\",\n                      id: player.id,\n                      commanderId: _player.id,\n                      name: player.name,\n                      value: -1,\n                    });\n                  }}\n                  rounded=\"2em\"\n                  height=\"1.5em\"\n                  paddingRight=\"0.15rem\"\n                  paddingLeft=\"0.15rem\"\n                  marginTop=\"1.25rem\"\n                  minWidth=\"2rem\"\n                >\n                  -1\n                </Button>\n                <Button\n                  onClick={() => {\n                    dispatch({\n                      type: \"SET_COMMANDER_DAMAGE\",\n                      id: player.id,\n                      commanderId: _player.id,\n                      name: player.name,\n                      value: 1,\n                    });\n                  }}\n                  rounded=\"2em\"\n                  height=\"1.5em\"\n                  paddingRight=\"0.15rem\"\n                  paddingLeft=\"0.15rem\"\n                  marginTop=\"1.5rem\"\n                  minWidth=\"2rem\"\n                >\n                  +1\n                </Button>\n              </Flex>\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button variantColor=\"blue\" mr={3} onClick={onClose}>\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Grid, Box } from \"@chakra-ui/core\";\nimport { PlayerBox } from \"./PlayerBox\";\nimport { useSelector } from \"react-redux\";\nimport useWindowSize from \"../hooks/useWindowSize\";\n\nexport const PlayersContainer = () => {\n  const players = useSelector((state) =>\n    Object.keys(state).map((key) => state[key])\n  );\n  const windowSize = useWindowSize();\n\n  return (\n    <Box>\n      <Grid\n        templateColumns={`repeat(${Math.ceil(players.length / 2)}, 1fr)`}\n        gap={6}\n      >\n        {players.slice(0, Math.ceil(players.length / 2)).map((player) => (\n          <PlayerBox\n            key={player.name}\n            id={player.id}\n            player={player}\n            w=\"100%\"\n            h={`${(windowSize.height - 50) / 2}px`}\n          />\n        ))}\n      </Grid>\n      <Grid\n        templateColumns={`repeat(${Math.floor(players.length / 2)}, 1fr)`}\n        gap={6}\n      >\n        {players.slice(Math.ceil(players.length / 2)).map((player) => (\n          <PlayerBox\n            key={player.name}\n            id={player.id}\n            player={player}\n            w=\"100%\"\n            h={`${(windowSize.height - 50) / 2}px`}\n          />\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n","const defaultPlayerState = {\n  0: {\n    id: 0,\n    name: \"Player 1\",\n    life: 20,\n    commanderDamage: {},\n  },\n};\n\nexport const players = (state = defaultPlayerState, action) => {\n  switch (action.type) {\n    case \"ADD_PLAYER\":\n      const length = Object.keys(state).length;\n      return {\n        ...state,\n        [length]: { name: `Player ${length + 1}`, life: 20, id: length },\n      };\n    case \"RESET_ALL_PLAYER_LIFE\":\n      return Object.keys(state).reduce((accumulator, key) => {\n        return {\n          ...accumulator,\n          [key]: {\n            ...state[key],\n            commanderDamage: undefined,\n            life: action.value || 20,\n          },\n        };\n      }, {});\n    case \"SET_PLAYER_LIFE\": {\n      const player = {\n        ...state[action.id],\n        life: state[action.id].life + action.value,\n      };\n      return { ...state, [action.id]: player };\n    }\n    case \"SET_PLAYER_COMMANDER\": {\n      const player = { ...state[action.id], commander: action.payload };\n      return { ...state, [action.id]: player };\n    }\n    case \"SET_COMMANDER_DAMAGE\": {\n      const commanderDamage = { ...state[action.id].commanderDamage };\n      if (!commanderDamage[action.commanderId]) {\n        commanderDamage[action.commanderId] = 0;\n      }\n\n      commanderDamage[action.commanderId] =\n        commanderDamage[action.commanderId] + action.value;\n\n      const player = {\n        ...state[action.id],\n        life: state[action.id].life - action.value,\n        commanderDamage,\n      };\n      return { ...state, [action.id]: player };\n    }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nexport const customIcons = {\n  pulse: {\n    path: (\n      <path\n        fill=\"currentColor\"\n        d=\"M450 207.5c-13.934 0-25.988 8.186-31.616 20H332.76l-59.937 159.385-140.647-374L51.471 227.5H0v30h72.24l59.937-159.385 140.647 374L353.529 257.5h64.855c5.628 11.814 17.682 20 31.616 20 19.299 0 35-15.701 35-35s-15.701-35-35-35z\"\n      />\n    ),\n    viewBox: \"0 0 485 485\",\n  },\n  twenty: {\n    path: (\n      <>\n        <path\n          d=\"M248.082.003C111.07.003 0 111.061 0 248.085c0 137 111.07 248.07 248.082 248.07 137.006 0 248.076-111.07 248.076-248.07C496.158 111.061 385.088.003 248.082.003z\"\n          fill=\"currentColor\"\n        />\n        <g fill=\"#fff\">\n          <path d=\"M230.646 325.595c-4.006-3.124-9.814-4.688-17.432-4.688h-76.465c2.439-3.71 4.834-6.885 7.178-9.521 5.468-6.64 15.551-15.967 30.249-27.979 14.696-12.012 25.17-20.824 31.421-26.44 6.248-5.614 12.378-13.378 18.384-23.291 6.006-9.911 9.009-20.922 9.009-33.032 0-7.713-1.441-15.161-4.321-22.339-2.882-7.178-6.91-13.5-12.085-18.97a57.594 57.594 0 0 0-18.018-12.891c-10.547-4.688-23.291-7.031-38.232-7.031-12.403 0-23.218 1.831-32.446 5.493s-16.846 8.473-22.852 14.429c-6.006 5.958-10.524 12.598-13.55 19.922-3.028 7.324-4.541 14.355-4.541 21.094 0 5.566 1.611 9.961 4.834 13.184s7.273 4.834 12.158 4.834c5.566 0 9.789-1.758 12.671-5.273 2.88-3.516 5.468-8.544 7.764-15.088 2.294-6.542 3.93-10.547 4.907-12.012 7.324-11.229 17.381-16.846 30.176-16.846 6.054 0 11.646 1.369 16.772 4.102 5.127 2.735 9.179 6.569 12.158 11.499 2.978 4.933 4.468 10.524 4.468 16.772 0 5.763-1.392 11.646-4.175 17.651s-6.837 11.865-12.158 17.578c-5.323 5.713-11.989 11.403-19.995 17.065-4.493 3.028-11.964 9.352-22.412 18.97-10.451 9.62-22.17 21.167-35.156 34.644-3.127 3.321-6.006 7.887-8.643 13.696-2.637 5.812-3.955 10.474-3.955 13.989 0 5.47 2.051 10.231 6.152 14.282 4.102 4.054 9.814 6.079 17.139 6.079h107.813c6.445 0 11.254-1.659 14.429-4.98 3.173-3.319 4.761-7.372 4.761-12.158-.001-5.369-2.004-9.617-6.007-12.744zM401.008 181.747c-4.299-9.276-9.547-17.065-15.747-23.364-6.202-6.299-13.403-11.083-21.606-14.355-8.203-3.271-17.336-4.907-27.393-4.907-15.234 0-28.345 3.688-39.331 11.06-10.986 7.375-19.361 18.091-25.122 32.153-3.321 8.496-5.764 18.654-7.324 30.469-1.563 11.817-2.344 25.099-2.344 39.844 0 11.426.707 22.046 2.124 31.86 1.415 9.814 3.637 18.775 6.665 26.88 5.955 14.845 14.818 26.466 26.587 34.863 11.767 8.4 25.071 12.598 39.917 12.598 12.891 0 24.609-3.126 35.156-9.375s19.139-15.136 25.781-26.66c5.273-9.375 8.885-19.823 10.84-31.348 1.952-11.522 2.93-25.292 2.93-41.309 0-29.492-3.713-52.295-11.133-68.409zm-32.08 111.182c-2.051 11.623-5.617 20.558-10.693 26.807-5.079 6.251-12.11 9.375-21.094 9.375-8.693 0-15.578-3.003-20.654-9.009-5.079-6.006-8.693-14.868-10.84-26.587-2.149-11.719-3.223-26.756-3.223-45.117 0-27.049 2.514-47.069 7.544-60.059 5.028-12.987 13.989-19.482 26.88-19.482 8.983 0 16.015 2.907 21.094 8.716 5.076 5.812 8.69 14.406 10.84 25.781 2.146 11.378 3.223 26.001 3.223 43.872-.001 18.849-1.027 34.083-3.077 45.703z\" />\n        </g>\n      </>\n    ),\n    viewBox: \"0 0 496.158 496.158\",\n  },\n  forty: {\n    path: (\n      <>\n        <path\n          d=\"M248.082.003C111.07.003 0 111.061 0 248.085c0 137 111.07 248.07 248.082 248.07 137.006 0 248.076-111.07 248.076-248.07C496.158 111.061 385.088.003 248.082.003z\"\n          fill=\"currentColor\"\n        />\n        <g fill=\"#fff\">\n          <path d=\"M235.848 279.892c-4.541-2.051-10.572-3.076-18.091-3.076h-6.299V163.437c0-16.992-7.423-25.488-22.266-25.488-4.591 0-8.521 1.538-11.792 4.614-3.273 3.076-7.448 8.034-12.524 14.868L87.239 261.288a1784.678 1784.678 0 0 0-5.42 7.178 112.065 112.065 0 0 0-4.248 6.079c-1.369 2.101-2.394 4.102-3.076 6.006-.685 1.904-1.025 3.786-1.025 5.64 0 7.228 2.318 12.941 6.958 17.139 4.637 4.2 11.595 6.299 20.874 6.299h73.535v27.246c0 7.324 1.685 12.868 5.054 16.626s7.787 5.64 13.257 5.64c5.566 0 10.009-1.831 13.33-5.493 3.319-3.662 4.98-9.251 4.98-16.772V309.63h8.936c7.42 0 12.987-1.293 16.699-3.882 3.71-2.586 5.566-6.713 5.566-12.378 0-6.934-2.27-11.427-6.811-13.478zm-61.011-3.076h-62.988l62.988-85.107v85.107zM401.009 181.747c-4.298-9.276-9.547-17.065-15.747-23.364-6.203-6.299-13.403-11.083-21.606-14.355-8.203-3.271-17.335-4.907-27.393-4.907-15.234 0-28.345 3.688-39.331 11.06-10.986 7.375-19.361 18.091-25.122 32.153-3.321 8.496-5.763 18.654-7.324 30.469-1.563 11.817-2.344 25.099-2.344 39.844 0 11.426.707 22.046 2.124 31.86 1.415 9.814 3.637 18.775 6.665 26.88 5.956 14.845 14.818 26.466 26.587 34.863 11.767 8.4 25.072 12.598 39.917 12.598 12.891 0 24.609-3.126 35.156-9.375s19.139-15.136 25.781-26.66c5.273-9.375 8.885-19.823 10.84-31.348 1.952-11.522 2.93-25.292 2.93-41.309 0-29.492-3.713-52.295-11.133-68.409zm-32.08 111.182c-2.051 11.623-5.617 20.558-10.693 26.807-5.079 6.251-12.11 9.375-21.094 9.375-8.693 0-15.578-3.003-20.654-9.009-5.079-6.006-8.693-14.868-10.84-26.587-2.149-11.719-3.223-26.756-3.223-45.117 0-27.049 2.513-47.069 7.544-60.059 5.028-12.987 13.989-19.482 26.88-19.482 8.983 0 16.015 2.907 21.094 8.716 5.077 5.812 8.69 14.406 10.84 25.781 2.147 11.378 3.223 26.001 3.223 43.872-.001 18.849-1.027 34.083-3.077 45.703z\" />\n        </g>\n      </>\n    ),\n    viewBox: \"0 0 496.158 496.158\",\n  },\n  addPlayer: {\n    path: (\n      <>\n        <path\n          d=\"M13.669 6.284l-.03-.049c.001-.101.002-.202 0-.305l.004-.073-.133-.745c0-1.307-.854-4.946-3.032-4.637 0 0-2.235-1.221-4.977.254C2.843 1.81 2.468 3.805 2.468 5.111v.985a.336.336 0 0 1-.016.048c-.086.247-.093.266.257 2.118a.449.449 0 0 0-.23.161c-.299.396-.038 1.441.042 1.721.075.491.265.773.439.934.384 2.761 2.758 4.93 4.843 4.93 2.438 0 4.746-2.39 5.153-4.927.173-.158.363-.436.435-.905.087-.312.349-1.359.048-1.755a.423.423 0 0 0-.128-.115 8.2 8.2 0 0 0 .326-2.005c.011-.006.022-.01.032-.017zm-2.733 1.467H8.922v2.12H7.088v-2.12H5.073V5.956h2.015V3.854h1.834v2.103h2.014v1.794z\"\n          fill=\"#currentColor\"\n        />\n      </>\n    ),\n    viewBox: \"0 0 16.008 16.008\",\n  },\n  rotate: {\n    path: (\n      <>\n        <path d=\"M509.823 254.911c0 140.559-114.354 254.911-254.911 254.911C114.353 509.822 0 395.47 0 254.911h44.97c0 115.758 94.182 209.949 209.942 209.949 115.757 0 209.938-94.191 209.938-209.949 0-115.76-94.182-209.941-209.938-209.941-50.893 0-99.505 18.291-137.719 51.558l45.908 45.903-142.594 22.777L43.283 22.633l42.057 42.05C132.097 22.972 192.071 0 254.912 0c140.557 0 254.911 114.353 254.911 254.911zm-100.17-3.747L255.002 96.513 100.347 251.164l154.655 154.652 154.651-154.652z\" />\n      </>\n    ),\n    viewBox: \"0 0 509.823 509.823\",\n  },\n};\n","import React from \"react\";\nimport { ThemeProvider, theme } from \"@chakra-ui/core\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { Header } from \"./components/Header\";\nimport { PlayersContainer } from \"./components/PlayersContainer\";\nimport { players } from \"./reducers/players\";\nimport { customIcons } from \"./customIcons\";\n\nconst store = createStore(players);\n\nconst updatedTheme = { ...theme, icons: { ...theme.icons, ...customIcons } };\n\nfunction App() {\n  //const dispatch = useDispatch();\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={updatedTheme}>\n        <Header></Header>\n        <PlayersContainer />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}